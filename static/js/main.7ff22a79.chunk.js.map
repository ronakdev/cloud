{"version":3,"sources":["utility/config.js","utility/firebase.js","utility/guid.js","utility/toast.js","components/FileUploader.js","components/Navbar.js","components/File.js","App.js","serviceWorker.js","index.js"],"names":["config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebase","settings","timestampsInSnapshots","firestore","storage","FieldValue","serverTimestamp","guid","s4","Math","floor","random","toString","substring","toast","message","time","x","document","createElement","innerHTML","id","className","body","appendChild","setTimeout","replace","FileUploader","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","uploadFile","bind","assertThisInitialized","getElementById","files","file_data","uuid","fileName","concat","name","storageRef","ref","failed","put","then","d","console","log","path","metadata","bucket","fullPath","getDownloadURL","url","collection","add","uploadDate","Date","storageURI","downloadURL","snapshot","doc","set","merge","react_default","a","type","data-height","lib","waves","node","onClick","icon","React","Component","Navbar","href","data-activates","File","getFileType","getFileIcon","deleteFile","setIcon","getIcon","state","file","image","imagePreview","filename","lastIndexOf","length","e","extension","toLowerCase","indexOf","_this2","refFromURL","delete","catch","error","_this3","split","slice","join","src","alt","width","height","toDate","toLocaleString","download","string","addEventListener","handler","event","clipboardData","setData","preventDefault","removeEventListener","execCommand","copyStringToClipboard","App","orderBy","limit","onSnapshot","forEach","exists","push","data","setState","fileView","map","f","index","components_File","key","components_Navbar","components_FileUploader","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7ff22a79.chunk.js","sourcesContent":["// Here, put your config. \n\nlet config = {\n    apiKey: \"AIzaSyAC7mgfB8JG7pLuc787Fg8sEWl_NvuJgp0\",\n    authDomain: \"shah-cloud-services.firebaseapp.com\",\n    databaseURL: \"https://shah-cloud-services.firebaseio.com\",\n    projectId: \"shah-cloud-services\",\n    storageBucket: \"shah-cloud-services.appspot.com\",\n    messagingSenderId: \"511211791983\"\n}\nexport default config\n","import * as firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/storage'\nimport config from './config.js'\n\nfirebase.initializeApp(config);\n\nfirebase.firestore().settings({timestampsInSnapshots: true})\n\nlet firestore = firebase.firestore()\nlet storage = firebase.storage()\nlet TIMESTAMP = firebase.firestore.FieldValue.serverTimestamp()\n\nexport {firestore, storage, TIMESTAMP}","function guid() {\n  function s4() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n  return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n}\n\nexport default guid","import './snackbar.css'\n\nfunction toast(message, time) {\n    if (!time) {\n        time = 3000\n    }\n    let x = document.createElement('div')\n    x.innerHTML = message\n    x.id = \"snackbar\"\n    x.className = \"show\";\n    document.body.appendChild(x)\n    setTimeout(function(){ x.className = x.className.replace(\"show\", \"\"); }, time);\n}\n\nexport default toast","import {firestore, storage, TIMESTAMP} from './../utility/firebase'\nimport React from 'react'\nimport {Button} from 'react-materialize'\nimport guid from './../utility/guid.js'\nimport toast from './../utility/toast.js'\n\n\nclass FileUploader extends React.Component {\n  constructor(props) {\n    super(props)\n    this.uploadFile = this.uploadFile.bind(this)\n  }\n\n  uploadFile() {\n    if (!document.getElementById('file-input').files[0]) {\n      toast(\"You need to upload a file first!\")\n      return\n    }\n    let file_data = document.getElementById('file-input').files[0]\n    let uuid = guid()\n    let fileName = `${uuid}<==>${file_data.name}`\n    let storageRef = storage.ref(fileName);\n\n    // console.log(file_data)\n    \n    let failed = false\n    if (!file_data) {\n      toast(\"You need to specify a file!\", 4000)\n      failed = true\n    }\n\n    if (failed) {\n      return\n    }\n    toast(\"Uploading File\", 2000)\n\n    storageRef.put(file_data).then((d) => {\n      console.log(d)\n      let path = `gs://${d.metadata.bucket}/${d.metadata.fullPath}`\n      const timestamp = TIMESTAMP\n\n      storageRef.getDownloadURL().then(url => {\n        firestore.collection(\"files\").add({\n          uploadDate: new Date(),\n          fileName: fileName,\n          storageURI: path,\n          downloadURL: url\n        }).then(snapshot => {\n          console.log(snapshot)\n          firestore.collection(\"files\").doc(snapshot.id).set({\n            id: snapshot.id\n          }, {merge: true})\n        })\n      })\n\n      toast(\"File Uploaded\")\n    });\n\n\n  }\n\n  render() {\n    return (\n    <div className=\"section\">\n      <div className=\"row\">\n        <div className=\"col s8\">\n<input type=\"file\" id=\"file-input\" className=\"dropify\" data-height=\"300\" />\n        </div>\n\n        <div className=\"input-field col s4\">\n          <Button waves=\"light\" node=\"a\" onClick={this.uploadFile} icon=\"file_upload\"> Upload File </Button>\n        </div>\n      </div>\n    </div>\n    )\n  }\n\n  componentDidMount() {\n    // let $this = $(ReactDOM.findDOMNode(this))\n\n  }\n}\n\n\nexport default FileUploader","import React from 'react'\n\nclass Navbar extends React.Component {\n    render() {\n        return (\n            <div>\n                <header>\n                    <nav className=\"top-nav\">\n                        <div className=\"container\">\n                            <div className=\"nav-wrapper\">\n                                <a className=\"brand-logo\" href=\"/\">Shah Cloud Services</a>\n                            </div>\n                            <a href=\"#\" data-activates=\"mobile-demo\" className=\"button-collapse\"><i className=\"material-icons\">menu</i></a>\n                            <ul className=\"right hide-on-med-and-down valign-wrapper\">\n                                <li><a href=\"https://github.com/ronakdev/cloud\">Github</a></li>\n                            </ul>\n                            <ul className=\"side-nav\" id=\"mobile-demo\">\n                                <li><a href=\"https://github.com/ronakdev/cloud\">Github</a></li>\n                            </ul>\n                        </div>\n                    </nav>\n                </header>\n            </div>\n        )\n    }\n}\n\nexport default Navbar","import React from 'react'\nimport toast from './../utility/toast.js'\nimport {firestore, storage} from './../utility/firebase'\n\nconst ICONS_PATH = \"/icons\"\n\nclass File extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.getFileType = this.getFileType.bind(this)\n    this.getFileIcon = this.getFileIcon.bind(this)\n    this.deleteFile = this.deleteFile.bind(this)\n    this.setIcon = this.setIcon.bind(this)\n    this.getIcon = this.getIcon.bind(this)\n\n    this.state = {}\n    console.log(this.props.file)\n    let type = this.getFileType(this.props.file.fileName)\n    let icon = this.getFileIcon(type)\n    let image = this.setIcon(icon)\n\n    this.state = {\n      imagePreview: image\n    }\n  }\n\n\n  getFileType(filename) {\n    if (filename) {\n      return filename.substring(filename.lastIndexOf('.')+1, filename.length) || filename;\n    }\n    return \"unsupported\"\n  }\n\n  setIcon(icon) {\n    var image = \"\"\n    \n    // console.log(\"Icon: \" + icon)\n    if (icon === \"image\") {\n      // console.log('imageee')\n      image = this.props.file.downloadURL\n    }\n    else if (icon === \"-1\") {\n      image = `${ICONS_PATH}/file.png`\n    }\n    else {\n      image = icon\n    }\n    return image\n  }\n\n  getIcon(icon) {\n    var image = \"\"\n    \n    // console.log(\"Icon: \" + icon)\n    if (icon === \"image\") {\n      image = this.props.file.downloadURL\n    }\n    else if (icon === \"-1\") {\n      image = `${ICONS_PATH}/file.png`\n    }\n    else {\n      image = icon\n    }\n    return image\n  }\n\n  getFileIcon(e) {\n    // console.log(e)\n    let supportedTypes = [\"aac\",\"aiff\",\"ai\",\"avi\",\"_blank\",\"bmp\",\"c\",\"cpp\",\"css\",\"csv\",\"dat\",\"dmg\",\"doc\",\"dotx\",\"dwg\",\"dxf\",\"eps\",\"exe\",\"filetypes\",\"flv\",\"gif\",\"h\",\"hpp\",\"html\",\"ics\",\"iso\",\"java\",\"jpg\",\"js\",\"key\",\"less\",\"mid\",\"mp3\",\"mp4\",\"mpg\",\"odf\",\"ods\",\"odt\",\"otp\",\"ots\",\"ott\",\"_page\",\"pdf\",\"php\",\"png\",\"ppt\",\"psd\",\"py\",\"qt\",\"rar\",\"rb\",\"rtf\",\"sass\",\"scss\",\"sql\",\"tga\",\"tgz\",\"tiff\",\"txt\",\"wav\",\"xls\",\"xlsx\",\"xml\",\"yml\",\"zip\"]\n\n    var extension = e.toLowerCase()\n    var icon = `${ICONS_PATH}/${extension}.png`\n    \n    if (extension === \"png\" || extension === \"gif\" || extension === \"jpg\" || extension === \"jpeg\" || extension === \"tiff\") {\n      return \"image\"\n    }\n    else if (supportedTypes.indexOf(extension) !== -1) {\n      return icon\n    }\n    else {\n      return \"-1\"\n    }\n  }\n\n  deleteFile() {\n    console.log(this.props)\n    let ref = storage.refFromURL(this.props.file.storageURI)\n    ref.delete().then(() => {\n      firestore.collection('files').doc(this.props.file.id).delete()\n      toast(\"Successfully Deleted!\")\n    }).catch(error => {\n      toast(`Error ${error} occured`)\n    })\n  }\n\n  render() {\n   let image = this.getIcon(this.getFileIcon(this.getFileType(this.props.file.fileName)))\n    // console.log(\"IMAGE\" + image)\n    let fileName = this.props.file.fileName.split('<==>').slice(1).join(\"<==>\")\n\n\n    return (\n      <div className=\"col s12 m4\">\n          <div className=\"card\">\n            <div className=\"card-image\">\n              <img src={image} alt=\"file logo\" width=\"330\" height=\"330\" />\n              <span className=\"card-title\">{fileName}</span>\n            </div>\n            <div className=\"card-content\">\n              <p>Uploaded on {((this.props.file.uploadDate.toDate())).toLocaleString().split(',')[0]}.</p>\n            </div>\n            <div className=\"card-action\">\n            <a \n              href={this.props.file.downloadURL} \n              download={this.props.file.fileName.split('<==>').slice(1).join(\"<==>\")}>\n                Download\n            </a>\n\n              <a href=\"#!\" onClick={() => {\n                // console.log(\"KLSDJFLKDSJFLKDSJFKLSDJFKLJSDKLJ\")\n                console.log(this.props.file.fileName)\n                copyStringToClipboard(this.props.file.downloadURL)\n                toast(\"Link Copied!\", 4000)\n                }}>Copy URL</a>\n\n              <a href=\"#!\" onClick={() => {\n                this.deleteFile()\n                }}>Delete</a>\n\n            </div>\n          </div>\n        </div>\n    )\n  }\n}\nfunction copyStringToClipboard (string) {\n    function handler (event){\n        event.clipboardData.setData('text/plain', string);\n        event.preventDefault();\n        document.removeEventListener('copy', handler, true);\n    }\n\n    document.addEventListener('copy', handler, true);\n    document.execCommand('copy');\n}\n\nexport default File","import React from 'react';\nimport './App.css';\n// import firebase from 'firebase'\nimport FileUploader from './components/FileUploader.js'\nimport Navbar from './components/Navbar.js'\nimport File from './components/File.js'\nimport toast from './utility/toast.js'\nimport {firestore} from './utility/firebase.js'\n// var config = {\n//     apiKey: \"AIzaSyAC7mgfB8JG7pLuc787Fg8sEWl_NvuJgp0\",\n//     authDomain: \"shah-cloud-services.firebaseapp.com\",\n//     databaseURL: \"https://shah-cloud-services.firebaseio.com\",\n//     projectId: \"shah-cloud-services\",\n//     storageBucket: \"shah-cloud-services.appspot.com\",\n//     messagingSenderId: \"511211791983\"\n//   };\n// firebase.initializeApp(config);\n\n// firebase.firestore().settings({timestampsInSnapshots: true})\n\nclass App extends React.Component {\n    constructor() {\n      super();\n      this.state = {\n        files: [] // [{fileName: \"Paper.docx\", uploader: \"ronak shah\", uploadDate: \"06/11/17\", downloadURL: \"\"}]\n      };\n    }\n\n    componentDidMount() {\n      let self = this\n      firestore.collection(\"files\").orderBy(\"uploadDate\", \"desc\").limit(20).onSnapshot(snapshot => {\n        let files = []\n        snapshot.forEach(doc => {\n          if (!doc.exists) {\n            toast(`Document does not exist`)\n          } else {\n            files.push(doc.data())\n            this.setState({\n              \"files\" : files\n            })\n          }\n        })\n        this.setState({\n          \"files\" : files\n        })\n      })\n    }\n\n    render() {\n      let fileView = (\n        <h1><center>No files yet. Start uploading!</center></h1>\n        )\n      if (this.state.files.length !== 0) {\n        fileView = (\n        <div className = \"row\">\n          {\n            this.state.files.map((f, index) => {\n              return (\n                <File file={f} key={index}/>\n              )\n            })\n          }\n          </div>\n        )\n      }\n      return(\n        <div>\n          <Navbar/>\n\n            <main>\n              <div className=\"container\">\n                <div className=\"section\">\n                  <div className=\"row\">\n                    <FileUploader/>\n                  </div>\n                  {fileView}\n                </div>\n              </div>\n            </main>\n          </div>\n        )\n       }\n\n   }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}